name: Start a test in Testbench

on:
  workflow_call:
    inputs:
      variables:
        description: 'Process instance variables'
        required: true
        type: string
      processId:
        description: 'Id of process to start in testbench (eg:- e2e-testbench-protocol)'
        required: true
        type: string
      branch:
        description: 'Branch to test'
        required: true
        type: string

jobs:
  testbench:
    name: Start a test in testbench
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
      - uses: google-github-actions/auth@v1
        id: auth
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - name: Setup BuildKit
        uses: docker/setup-buildx-action@v2
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - id: image-name
        name: Calculate image name
        shell: bash
        run: |
          # Replace dots and slashes with dashes
          branch=${BRANCH/[\/\.]/-}
          version=$(./mvnw help:evaluate -q -DforceStdout -D"expression=project.version")
          echo "image-name=gcr.io/zeebe-io/zeebe:$version-$branch-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        env:
          BRANCH: ${{ inputs.branch }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ steps.image-name.outputs.image-name }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: DIST=build
          target: app
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/zeebe/ci/zeebe TESTBENCH_PROD_CLIENT_SECRET;
            secret/data/products/zeebe/ci/zeebe TESTBENCH_PROD_CONTACT_POINT;
        # Start e2e test instance, do not wait for the result
      - name: Start Test
        shell: bash
        run: |
          chmod +x clients/go/cmd/zbctl/dist/zbctl
          variables=$(echo "${{ inputs.variables }}" | envsubst)
          clients/go/cmd/zbctl/dist/zbctl create instance ${{ inputs.processId }} --variables "$variables"
        env:
          IMAGE: ${{ steps.image-name.outputs.image-name }}
          ZEEBE_CLIENT_SECRET: ${{ steps.secrets.outputs.TESTBENCH_PROD_CLIENT_SECRET }}
          ZEEBE_ADDRESS: ${{ steps.secrets.outputs.TESTBENCH_PROD_CONTACT_POINT }}
          ZEEBE_AUTHORIZATION_SERVER_URL: 'https://login.cloud.ultrawombat.com/oauth/token'
          ZEEBE_CLIENT_ID: 'S7GNoVCE6J-8L~OdFiI59kWM19P.wvKo'
